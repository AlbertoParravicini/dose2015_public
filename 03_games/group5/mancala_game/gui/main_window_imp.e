note
	description: "[
		Objects that represent an EV_TITLED_WINDOW.
		The original version of this class was generated by EiffelBuild.
		This class is the implementation of an EV_TITLED_WINDOW generated by EiffelBuild.
		You should not modify this code by hand, as it will be re-generated every time
		 modifications are made to the project.
		 	]"
	generator: "EiffelBuild"
	date: "$Date: 2015-04-03 06:15:42 -0700 (Fri, 03 Apr 2015) $"
	revision: "$Revision: 97017 $"

deferred class
	MAIN_WINDOW_IMP

inherit
	EV_TITLED_WINDOW
		redefine
			create_interface_objects, initialize, is_in_default_state
		end

	CONSTANTS
		undefine
			is_equal, default_create, copy
		end

feature {NONE}-- Initialization

	frozen initialize
			-- Initialize `Current'.
		local
			internal_font: EV_FONT
		do
			Precursor {EV_TITLED_WINDOW}
			initialize_constants


				-- Build widget structure.
			extend (box_container_main)
			box_container_main.extend (title_label)
			box_container_main.extend (box_table_engines)
			box_container_main.extend (combo_engines)
			box_container_main.extend (box_frame_parameters)
			box_frame_parameters.extend (l_ev_horizontal_box_1)
			l_ev_horizontal_box_1.extend (label_max_depth)
			l_ev_horizontal_box_1.extend (text_field_max_depth)
			l_ev_horizontal_box_1.extend (l_ev_cell_1)
			box_container_main.extend (box_table_buttons)

			box_container_main.set_minimum_width (200)
			box_container_main.set_minimum_height (250)
			box_container_main.set_padding (5)
			box_container_main.set_border_width (5)
			create internal_font
			internal_font.set_family ({EV_FONT_CONSTANTS}.Family_sans)
			internal_font.set_weight ({EV_FONT_CONSTANTS}.Weight_regular)
			internal_font.set_shape ({EV_FONT_CONSTANTS}.Shape_regular)
			internal_font.set_height_in_points (24)
			internal_font.preferred_families.extend ("Segoe UI")
			title_label.set_font (internal_font)
			title_label.set_text ("Mancala")
			box_table_engines.resize (2, 1)
			box_table_engines.set_column_spacing (1)
			box_table_engines.set_border_width (1)
				-- Insert and position all children of `box_table_engines'.
			box_table_engines.put_at_position (radio_button_solitaire, 1, 1, 1, 1)
			box_table_engines.put_at_position (radio_button_adversary, 2, 1, 1, 1)
			radio_button_solitaire.set_text ("Solitaire")
			radio_button_adversary.set_text ("Adversary")
			combo_engines.set_text ("Engines")
			box_frame_parameters.set_text ("Additional Parameters")
			l_ev_horizontal_box_1.set_border_width (5)
			label_max_depth.set_text ("Maximum Depth")
			label_max_depth.set_minimum_width (100)
			text_field_max_depth.set_text ("15")
			text_field_max_depth.set_minimum_width (0)
			text_field_max_depth.set_minimum_height (15)
			l_ev_cell_1.set_minimum_width (20)
			box_table_buttons.resize (3, 2)
			box_table_buttons.set_row_spacing (1)
			box_table_buttons.set_column_spacing (1)
			box_table_buttons.set_border_width (1)
				-- Insert and position all children of `box_table_buttons'.
			box_table_buttons.put_at_position (l_ev_cell_2, 1, 1, 1, 1)
			box_table_buttons.put_at_position (button_start, 2, 1, 1, 1)
			box_table_buttons.put_at_position (l_ev_cell_3, 3, 1, 1, 1)
			box_table_buttons.put_at_position (l_ev_cell_4, 1, 2, 1, 1)
			box_table_buttons.put_at_position (button_help, 2, 2, 1, 1)
			box_table_buttons.put_at_position (l_ev_cell_5, 3, 2, 1, 1)
			button_start.set_text ("Start Game")
			button_help.set_text ("Help")
			set_minimum_width (250)
			set_minimum_height (300)
			disable_user_resize
			set_maximum_width (400)
			set_maximum_height (300)
			set_title ("Mancala")

			set_all_attributes_using_constants

				-- Connect events.
			radio_button_solitaire.select_actions.extend (agent action_select_solitaire)
			radio_button_adversary.select_actions.extend (agent action_select_adversary)
			combo_engines.change_actions.extend (agent action_select_engine)
			button_start.select_actions.extend (agent action_start_click)
			button_help.select_actions.extend (agent action_help_click)
				-- Close the application when an interface close
				-- request is received on `Current'. i.e. the cross is clicked.
			close_request_actions.extend (agent request_close_window)

				-- Call `user_initialization'.
			user_initialization
		end

	frozen create_interface_objects
			-- Create objects
		do

				-- Create all widgets.
			create box_container_main
			create title_label
			create box_table_engines
			create radio_button_solitaire
			create radio_button_adversary
			create combo_engines
			create box_frame_parameters
			create l_ev_horizontal_box_1
			create label_max_depth
			create text_field_max_depth
			create l_ev_cell_1
			create box_table_buttons
			create l_ev_cell_2
			create button_start
			create l_ev_cell_3
			create l_ev_cell_4
			create button_help
			create l_ev_cell_5

			create string_constant_set_procedures.make (10)
			create string_constant_retrieval_functions.make (10)
			create integer_constant_set_procedures.make (10)
			create integer_constant_retrieval_functions.make (10)
			create pixmap_constant_set_procedures.make (10)
			create pixmap_constant_retrieval_functions.make (10)
			create integer_interval_constant_retrieval_functions.make (10)
			create integer_interval_constant_set_procedures.make (10)
			create font_constant_set_procedures.make (10)
			create font_constant_retrieval_functions.make (10)
			create pixmap_constant_retrieval_functions.make (10)
			create color_constant_set_procedures.make (10)
			create color_constant_retrieval_functions.make (10)
			user_create_interface_objects
		end

feature {NONE} -- Implementation, Close event
	request_close_window
			-- Process user request to close the window.
		local
			question_dialog: EV_CONFIRMATION_DIALOG
		do
			create question_dialog.make_with_text ("You are about close this window. %NClick OK to proceed.")
			current.disable_sensitive
			question_dialog.show_modal_to_window (Current)
			if question_dialog.selected_button ~ (create {EV_DIALOG_CONSTANTS}).ev_ok then
					-- Destroy the window.
				destroy

					-- End the application.
					--| TODO: Remove next instruction if you don't want the application
					--|       to end when the first window is closed..
				if attached (create {EV_ENVIRONMENT}).application as a then
					a.destroy
				end
			else
				current.enable_sensitive
			end
		end




feature -- Access

	box_container_main: EV_VERTICAL_BOX
	title_label, label_max_depth: EV_LABEL
	box_table_engines, box_table_buttons: EV_TABLE
	radio_button_solitaire,
	radio_button_adversary: EV_RADIO_BUTTON
	combo_engines: EV_COMBO_BOX
	box_frame_parameters: EV_FRAME
	text_field_max_depth: EV_TEXT_FIELD
	button_start,
	button_help: EV_BUTTON

feature {NONE} -- Implementation

	l_ev_horizontal_box_1: EV_HORIZONTAL_BOX
	l_ev_cell_1, l_ev_cell_2, l_ev_cell_3, l_ev_cell_4, l_ev_cell_5: EV_CELL

feature {NONE} -- Implementation

	is_in_default_state: BOOLEAN
			-- Is `Current' in its default state?
		do
			Result := True
		end

	user_create_interface_objects
			-- Feature for custom user interface object creation, called at end of `create_interface_objects'.
		deferred
		end

	user_initialization
			-- Feature for custom initialization, called at end of `initialize'.
		deferred
		end

	action_select_solitaire
			-- Called by `select_actions' of `radio_button_solitaire'.
		deferred
		end

	action_select_adversary
			-- Called by `select_actions' of `radio_button_adversary'.
		deferred
		end

	action_select_engine
			-- Called by `change_actions' of `combo_engines'.
		deferred
		end

	action_start_click
			-- Called by `select_actions' of `button_start'.
		deferred
		end

	action_help_click
			-- Called by `select_actions' of `button_help'.
		deferred
		end


feature {NONE} -- Constant setting

	frozen set_attributes_using_string_constants
			-- Set all attributes relying on string constants to the current
			-- value of the associated constant.
		local
			s: STRING_32
		do
			from
				string_constant_set_procedures.start
			until
				string_constant_set_procedures.off
			loop
				s := string_constant_retrieval_functions.i_th (string_constant_set_procedures.index).item (Void)
				string_constant_set_procedures.item.call ([s])
				string_constant_set_procedures.forth
			end
		end

	frozen set_attributes_using_integer_constants
			-- Set all attributes relying on integer constants to the current
			-- value of the associated constant.
		local
			i: INTEGER
			arg1, arg2: INTEGER
			int: INTEGER_INTERVAL
		do
			from
				integer_constant_set_procedures.start
			until
				integer_constant_set_procedures.off
			loop
				i := integer_constant_retrieval_functions.i_th (integer_constant_set_procedures.index).item (Void)
				integer_constant_set_procedures.item.call ([i])
				integer_constant_set_procedures.forth
			end
			from
				integer_interval_constant_retrieval_functions.start
				integer_interval_constant_set_procedures.start
			until
				integer_interval_constant_retrieval_functions.off
			loop
				arg1 := integer_interval_constant_retrieval_functions.item.item (Void)
				integer_interval_constant_retrieval_functions.forth
				arg2 := integer_interval_constant_retrieval_functions.item.item (Void)
				create int.make (arg1, arg2)
				integer_interval_constant_set_procedures.item.call ([int])
				integer_interval_constant_retrieval_functions.forth
				integer_interval_constant_set_procedures.forth
			end
		end

	frozen set_attributes_using_pixmap_constants
			-- Set all attributes relying on pixmap constants to the current
			-- value of the associated constant.
		local
			p: EV_PIXMAP
		do
			from
				pixmap_constant_set_procedures.start
			until
				pixmap_constant_set_procedures.off
			loop
				p := pixmap_constant_retrieval_functions.i_th (pixmap_constant_set_procedures.index).item (Void)
				pixmap_constant_set_procedures.item.call ([p])
				pixmap_constant_set_procedures.forth
			end
		end

	frozen set_attributes_using_font_constants
			-- Set all attributes relying on font constants to the current
			-- value of the associated constant.
		local
			f: EV_FONT
		do
			from
				font_constant_set_procedures.start
			until
				font_constant_set_procedures.off
			loop
				f := font_constant_retrieval_functions.i_th (font_constant_set_procedures.index).item (Void)
				font_constant_set_procedures.item.call ([f])
				font_constant_set_procedures.forth
			end
		end

	frozen set_attributes_using_color_constants
			-- Set all attributes relying on color constants to the current
			-- value of the associated constant.
		local
			c: EV_COLOR
		do
			from
				color_constant_set_procedures.start
			until
				color_constant_set_procedures.off
			loop
				c := color_constant_retrieval_functions.i_th (color_constant_set_procedures.index).item (Void)
				color_constant_set_procedures.item.call ([c])
				color_constant_set_procedures.forth
			end
		end

	frozen set_all_attributes_using_constants
			-- Set all attributes relying on constants to the current
			-- calue of the associated constant.
		do
			set_attributes_using_string_constants
			set_attributes_using_integer_constants
			set_attributes_using_pixmap_constants
			set_attributes_using_font_constants
			set_attributes_using_color_constants
		end

	string_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [READABLE_STRING_GENERAL]]]
	string_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE, STRING_32]]
	integer_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [INTEGER]]]
	integer_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE, INTEGER]]
	pixmap_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_PIXMAP]]]
	pixmap_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE, EV_PIXMAP]]
	integer_interval_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE, INTEGER]]
	integer_interval_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [INTEGER_INTERVAL]]]
	font_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_FONT]]]
	font_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE, EV_FONT]]
	color_constant_set_procedures: ARRAYED_LIST [PROCEDURE [ANY, TUPLE [EV_COLOR]]]
	color_constant_retrieval_functions: ARRAYED_LIST [FUNCTION [ANY, TUPLE, EV_COLOR]]

	frozen integer_from_integer (an_integer: INTEGER): INTEGER
			-- Return `an_integer', used for creation of
			-- an agent that returns a fixed integer value.
		do
			Result := an_integer
		end

end
